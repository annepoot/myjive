image: continuumio/miniconda3:latest

stages:
  - test
  - build
  - validation
  - release

test_code:
  stage: test
  script:
    - echo "Installing environment"
    - conda env create -f ENVIRONMENT.yml
    - source $(conda info --base)/etc/profile.d/conda.sh
    - conda activate myjive
    - echo "Running tests"
    - pytest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test_release_name:
  stage: test
  script:
    - |
      if [[ "$CI_MERGE_REQUEST_TITLE" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "Merge request title follows the versioning pattern v#.#.#"
        exit 0
      else
        echo "Error: Merge request title does not follow the required pattern v#.#.#"
        echo "Current title: $CI_MERGE_REQUEST_TITLE"
        exit 1
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"
  
build_wheel:
  stage: build
  script:
    - echo "Installing dev environment"
    - conda env create -f dev/ENVIRONMENT-dev.yml
    - source $(conda info --base)/etc/profile.d/conda.sh
    - conda activate myjive-dev
    - echo "Building wheel file"
    - python -m build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"
  artifacts:
    paths:
      - dist/*.whl  # Save the wheel file as an artifact
    expire_in: 1 week

validate_wheel:
  stage: validation
  image: python:3.10
  script:
    - echo "Installing cholmod library"
    - apt-get update && apt-get install -y libsuitesparse-dev
    - WHEEL_FILE=$(ls dist/*.whl | head -n 1)
    - echo "Testing installation of wheel file"
    - echo $WHEEL_FILE
    - pip install $WHEEL_FILE
    - echo "Testing myjive imports"
    - python -c "import myjive; print('Successfully imported myjive')"
    - python -c "import myjivex; print('Successfully imported myjivex')"
  needs:
    - build_wheel
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"
